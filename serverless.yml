service: alura-med-api

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      domain:
        sources:
          - table: ${self:provider.environment.PACIENTES_TABLE}
            sources: [./offline/migrations/pacientes-seed.json]
  serverless-offline:
    httpPort: 3001
          

provider:
  name: aws
  runtime: nodejs12.x

  # you can overwrite defaults here
  stage: dev
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true
  lambdaHashingVersion: 20201221
  environment:
   PACIENTES_TABLE: 'PACIENTES_${opt:stage, self:provider.stage}'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PACIENTES_TABLE}'

functions:
  listarPacientes:
    handler: src/handler.listarPacientes
    events:
      - http:
          path: pacientes
          method: get

  obterPaciente:
    handler: src/handler.obterPaciente
    events:
      - http:
          path: pacientes/{pacienteId}
          method: get

  cadastrarPaciente:
    handler: src/handler.cadastrarPaciente
    events:
      - http:
          path: pacientes
          method: post

  atualizarPaciente:
    handler: src/handler.atualizarPaciente
    events:
      - http:
          path: pacientes/{pacienteId}
          method: put
          
  excluirPaciente:
    handler: src/handler.excluirPaciente
    events:
      - http:
          path: pacientes/{pacienteId}
          method: delete

resources:
  Resources:
    PacientesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PACIENTES_TABLE}
        AttributeDefinitions:
          - AttributeName: paciente_id
            AttributeType: S
        KeySchema:
          - AttributeName: paciente_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    CodeBuildServiceRole:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          # Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service: codebuild.amazonaws.com
              Action: 'sts:AssumeRole'
        Policies:
          - PolicyName: root
            PolicyDocument:
              # Version: 2012-10-17
              Statement:
                - Sid: CloudWatchLogsPolicy
                  Effect: Allow
                  Action:
                    - 'logs:CreateLogGroup'
                    - 'logs:CreateLogStream'
                    - 'logs:PutLogEvents'
                  Resource:
                    - '*'
                - Sid: S3GetObjectPolicy
                  Effect: Allow
                  Action:
                    - 's3:GetObject'
                    - 's3:GetObjectVersion'
                  Resource:
                    - '*'
                - Sid: S3PutObjectPolicy
                  Effect: Allow
                  Action:
                    - 's3:PutObject'
                  Resource:
                    - '*'
                - Sid: S3BucketIdentity
                  Effect: Allow
                  Action:
                    - 's3:GetBucketAcl'
                    - 's3:GetBucketLocation'
                  Resource:
                    - '*'
                - Sid: CloudformationPolicy
                  Effect: Allow
                  Action:
                    - cloudformation:CreateStack
                    - cloudformation:CreateChangeSet
                    - cloudformation:ListStacks
                    - cloudformation:UpdateStack
                    - cloudformation:DescribeChangeSet
                    - cloudformation:ExecuteChangeSet
                  Resource:
                    - '*'
    CodeBuildSourceCredential:
      Type: 'AWS::CodeBuild::SourceCredential'
      Properties:
        AuthType: PERSONAL_ACCESS_TOKEN
        ServerType: GITHUB
        Token: '{{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}'
    CodeBuilProject:
      Type: 'AWS::CodeBuild::Project'
      Properties:
        Name: !Ref 'AWS::StackName'
        ServiceRole: !GetAtt CodeBuildServiceRole.Arn
        Source:
          Type: GITHUB
          Location: 'https://github.com/humbertodosreis/alura-med-api.git'
          BuildSpec: buildspec.yml
          Auth:
            Type: OAUTH
            Resource: !Ref CodeBuildSourceCredential
        Artifacts:
          Type: NO_ARTIFACTS
        Triggers:
          Webhook: true
          FilterGroups:
            - - Type: EVENT
                Pattern: 'PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED'
                # Pattern: 'PUSH'
              - Type: BASE_REF
                Pattern: !Sub ^refs/heads/master$
        Environment:
          Type: LINUX_CONTAINER
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:5.0

